# 本科生研究生指导 Undergraduate Postgraduate
type UGPGGuidance {
  id: ID!
  studentName: String!
  thesisTopic: String!
  openingCheckDate: Time
  openingCheckResult: String
  midtermCheckDate: Time
  midtermCheckResult: String
  defenseDate: Time
  defenseResult: String
  createdAt: Time!
  updatedAt: Time!
}

type UGPGGuidancePreview {
  studentName: String
  thesisTopic: String
  openingCheckDate: Time
  openingCheckResult: String
  midtermCheckDate: Time
  midtermCheckResult: String
  defenseDate: Time
  defenseResult: String
}

input UGPGGuidanceData {
  studentName: String!
  thesisTopic: String!
  openingCheckDate: Time
  openingCheckResult: String
  midtermCheckDate: Time
  midtermCheckResult: String
  defenseDate: Time
  defenseResult: String
}

input UGPGGuidanceFilter {
  studentName: String
  thesisTopic: String
  defenseDateStart: Time
  defenseDateEnd: Time
  createdStart: Time
  createdEnd: Time
  updatedStart: Time
  updatedEnd: Time
}

extend type Query {
  uGPGGuidance(id: ID!): UGPGGuidance!
  uGPGGuidancesByFilter(filter: UGPGGuidanceFilter!): [UGPGGuidance]!
}

extend type Mutation {
  createUGPGGuidance(uGPGGuidanceData: UGPGGuidanceData!): UGPGGuidance!
  updateUGPGGuidance(
    id: ID!
    uGPGGuidanceData: UGPGGuidanceData!
  ): UGPGGuidance!
  deleteUGPGGuidance(id: ID!): UGPGGuidance!

  uploadUGPGGuidances(file: Upload!): [UGPGGuidancePreview]!
  createUGPGGuidances(uGPGGuidancesData: [UGPGGuidanceData!]!): [UGPGGuidance!]!
}
