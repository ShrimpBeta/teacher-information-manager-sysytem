# 课程时间
type ClassTime {
  dayOfWeek: Int!
  timeSlot: String!
}

# 单个课程
type Course {
  id: ID!
  teacherNames: String!
  courseName: String!
  courseLocation: String
  courseType: String
  courseWeeks: [String]!
  classTimes: [ClassTime]!
  studentCount: Int
  color: String
}

# 课程表学期
type AcademicTerm {
  id: ID!
  termName: String!
  courses: [Course]!
  createdAt: Time!
  updatedAt: Time!
}

type AcademicTermShort {
  id: ID!
  termName: String!
  createdAt: Time!
  updatedAt: Time!
}

# 课程表学期预览，OCR识别结果
type ClassTimePreview {
  dayOfWeek: Int
  timeSlot: String
}

type CoursePreview {
  teacherNames: String
  courseName: String
  courseLocation: String
  courseType: String
  courseWeeks: [String]
  classTimes: [ClassTimePreview]
  studentCount: Int
  color: String
}

type AcademicTermPreview {
  termName: String
  courses: [CoursePreview]
}

input ClassTimeData {
  dayOfWeek: Int!
  timeSlot: String!
}

input CourseData {
  teacherNames: String
  courseName: String!
  courseLocation: String
  courseType: String
  courseWeeks: [String]!
  classTimes: [ClassTimeData]!
  studentCount: Int
  color: String
}

input NewAcademicTerm {
  termName: String!
  courses: [CourseData]!
}

input UpdateAcademicTerm {
  termName: String!
}

extend type Query {
  # 查看一个学期
  academicTerm(id: ID!): AcademicTerm!

  # 查看用户所有学期
  academicTerms: [AcademicTermShort]!
}

extend type Mutation {
  createCourse(termId: ID!, courseData: CourseData!): Course!
  updateCourse(termId: ID!, courseId: ID!, courseData: CourseData!): Course!
  deleteCourse(termId: ID!, courseId: ID!): Course!

  createAcademicTerm(termData: NewAcademicTerm!): AcademicTerm!
  updateAcademicTerm(termId: ID!, termData: UpdateAcademicTerm!): AcademicTerm!
  deleteAcademicTerm(termId: ID!): AcademicTerm!

  uploadAcademicTerm(file: Upload!): AcademicTermPreview!
}
