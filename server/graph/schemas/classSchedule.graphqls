# 课程时间
type ClassTime {
  dayOfWeek: Int!
  start: Int!
  end: Int!
}

# 单个课程
type Course {
  id: ID!
  teacherNames: String!
  courseName: String!
  courseLocation: String
  courseType: String
  courseWeeks: [Int]!
  courseTimes: [ClassTime]!
  studentCount: Int
  color: String
}

# 课程表学期
type AcademicTerm {
  id: ID!
  termName: String!
  startDate: Time!
  weekCount: Int!
  courses: [Course]
  createdAt: Time!
  updatedAt: Time!
}

type AcademicTermShort {
  id: ID!
  termName: String!
  startDate: Time!
  weekCount: Int!
  createdAt: Time!
  updatedAt: Time!
}

type AcademicTermQuery {
  totalCount: Int!
  academicTerms: [AcademicTermShort]!
}

# 课程表学期预览，OCR识别结果
type ClassTimePreview {
  dayOfWeek: Int
  start: Int
  end: Int
}

type CoursePreview {
  teacherNames: String
  courseName: String
  courseLocation: String
  courseType: String
  courseWeeks: [Int]
  courseTimes: [ClassTimePreview]
  studentCount: Int
  color: String
}

type AcademicTermPreview {
  termName: String
  courses: [CoursePreview]
}

input ClassTimeData {
  dayOfWeek: Int!
  start: Int!
  end: Int!
}

input CourseData {
  teacherNames: String!
  courseName: String!
  courseLocation: String
  courseType: String
  courseWeeks: [Int]!
  courseTimes: [ClassTimeData]!
  studentCount: Int
  color: String
}

input NewAcademicTerm {
  termName: String!
  startDate: Time!
  weekCount: Int!
  courses: [CourseData]
}

input UpdateAcademicTerm {
  termName: String!
  startDate: Time!
  weekCount: Int!
}

input AcademicTermFilter {
  termName: String
}

extend type Query {
  academicTerm(id: ID!): AcademicTerm!

  academicTermsByFilter(
    filter: AcademicTermFilter!
    offset: Int!
    limit: Int!
  ): AcademicTermQuery!
  AcademicTerms(ids: [ID]!): [AcademicTerm]!
}

extend type Mutation {
  createCourse(termId: ID!, courseData: CourseData!): Course!
  updateCourse(termId: ID!, courseId: ID!, courseData: CourseData!): Course!
  deleteCourse(termId: ID!, courseId: ID!): Course!

  createAcademicTerm(termData: NewAcademicTerm!): AcademicTerm!
  updateAcademicTerm(termId: ID!, termData: UpdateAcademicTerm!): AcademicTerm!
  deleteAcademicTerm(termId: ID!): AcademicTerm!

  uploadAcademicTerm(file: Upload!): AcademicTermPreview!
}
