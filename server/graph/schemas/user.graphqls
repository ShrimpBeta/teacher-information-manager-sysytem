# 用户
type User {
  id: ID!
  username: String!
  email: String!
  avatar: String!
  phoneNumber: String
  wechatToken: String
  activate: Boolean!
  createdAt: Time!
  updateAt: Time!
}

# 导出用户
type UserExport {
  id: ID!
  username: String!
  email: String!
  avatar: String!
}

input ResetPassword {
  email: String
  code: String
  newPassword: String
}

input ChangePassword {
  oldPassword: String
  newPassword: String
}

input UpdateUser {
  username: String
  avatar: String
  phoneNumber: String
}

extend type Query {
  user(id: String!): User!
  userExports: [UserExport]!
  signIn(email: String!, password: String!): AuthPayload!
}

extend type Mutation {
  deleteAccount(id: ID!): User!

  updateAccountPassword(id: ID!, passwordData: ChangePassword): String!
  forgetAccountPassword(passwordCodeData: ResetPassword): String!

  updateUser(id: ID!, userData: UpdateUser!): User!

  createWechatToken(id: ID!, token: String!): Boolean!
  updateWechatToken(id: ID!, token: String!): Boolean!
  deleteWechatToken(id: ID!): Boolean!
}
