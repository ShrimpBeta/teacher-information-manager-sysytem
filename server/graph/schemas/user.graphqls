# 用户
type User {
  id: ID!
  username: String!
  email: String!
  avatar: String!
  phoneNumber: String
  wechatToken: String
  activate: Boolean!
  createdAt: Time!
  updatedAt: Time!
}

# 导出用户
type UserExport {
  id: ID!
  username: String!
  email: String!
  avatar: String!
}

type AvatarPath {
  avatarUrl: String!
}

input ResetPassword {
  email: String!
  code: String!
  newPassword: String!
}

input ChangePassword {
  oldPassword: String!
  newPassword: String!
}

input UpdateUser {
  username: String
  avatar: String
  phoneNumber: String
}

extend type Query {
  user(id: String!): User!
  userExports: [UserExport]!
  signIn(email: String!, password: String!): AuthPayload!
}

extend type Mutation {
  deleteAccount(userId: ID!): User!

  updateAccountPassword(userId: ID!, passwordData: ChangePassword): String!
  forgetAccountPassword(userId: ID!, passwordCodeData: ResetPassword): String!

  updateUser(userId: ID!, userData: UpdateUser!): User!

  createWechatToken(userId: ID!, token: String!): Boolean!
  updateWechatToken(userId: ID!, token: String!): Boolean!
  deleteWechatToken(userId: ID!): Boolean!

  uploadAvatar(userId: ID!, avatar: Upload!): AvatarPath!
}
