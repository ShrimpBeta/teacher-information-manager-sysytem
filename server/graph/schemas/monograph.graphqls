# 专著
type Monograph {
  id: ID!
  teachersIn: [UserExport]!
  teachersOut: [String]
  title: String!
  publishDate: Time
  publishLevel: String
  rank: String
  createdAt: Time!
  updatedAt: Time!
}

type MonographPreview {
  teachersIn: [UserExport]
  teachersOut: [String]
  title: String
  publishDate: Time
  publishLevel: String
  rank: String
}

input MonographData {
  teachersIn: [ID]!
  teachersOut: [String]
  title: String!
  publishDate: Time
  publishLevel: String
  rank: String
}

input MonographFilter {
  teachersIn: [ID]!
  teachersOut: [String]
  title: String
  publishDateStart: Time
  publishDateEnd: Time
  publishLevel: String
  rank: String
  createdStart: Time
  createdEnd: Time
  updatedStart: Time
  updatedEnd: Time
}

extend type Query {
  monograph(id: ID!): Monograph!

  monographsByFilter(filter: MonographFilter!): [Monograph]!
}

extend type Mutation {
  createMonograph(monographData: MonographData!): Monograph!
  updateMonograph(id: ID!, monographData: MonographData!): Monograph!
  deleteMonograph(id: ID!): Monograph!

  uploadMonographs(file: Upload!): [MonographPreview]!
  createMonographs(monographsData: [MonographData]!): [Monograph]!
}
