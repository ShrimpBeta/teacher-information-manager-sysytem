# 专著
type Monograph {
  id: ID!
  teachersIn: [UserExport]!
  teachersOut: [String]
  title: String!
  publishDate: Time
  publishLevel: String
  rank: String
  createdAt: Time!
  updatedAt: Time!
}

type MonographPreview {
  teachersIn: [UserExport]
  teachersOut: [String]
  title: String
  publishDate: Time
  publishLevel: String
  rank: String
}

input MonographData {
  teachersIn: [ID]!
  teachersOut: [String]
  title: String!
  publishDate: Time
  publishLevel: String
  rank: String
}

extend type Query {
  monograph(id: ID!): Monograph!
  monographs(userId: ID!): [Monograph]!

  monographsByName(name: String!): [Mentorship]!
}

extend type Mutation {
  createMonograph(newMonographData: MonographData!): Monograph!
  updateMonograph(id: ID!, monographData: MonographData!): Monograph!
  deleteMonograph(id: ID!): Monograph!

  uploadMonographs(file: Upload!): [MonographPreview]!
  createdMonographs(newMonographDatas: [MonographData]!): [Monograph]!
}
