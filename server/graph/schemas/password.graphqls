type Password {
  id: ID!
  url: String
  appName: String
  account: String!
  password: String!
  description: String
  createdAt: Time!
  updatedAt: Time!
}

type PasswordPreview {
  url: String
  appName: String
  account: String!
  description: String
}

input PasswordData {
  url: String
  appName: String
  account: String!
  password: String!
  description: String
}

input PasswordFilter {
  userId: ID!
  url: String
  appName: String
  account: String
}

extend type Query {
  password(id: ID!): Password!
  passwordTrue(id: ID!): Password!

  passwordsByFilter(filter: PasswordFilter!): [Password]!
}

extend type Mutation {
  createPassword(userId: ID!, newPasswordData: PasswordData!): Password!
  updatePassword(id: ID!, passwordData: PasswordData!): Password!
  deletePassword(id: ID!): Password!

  uploadPasswords(file: Upload!): [Password]!
  createdPasswords(userId: ID!, newPasswordDatas: [PasswordData]!): [Password]!
}
