# 论文
type Paper {
  id: ID!
  teachersIn: [UserExport]!
  teachersOut: [String]
  title: String!
  publishDate: Time
  rank: String
  journalName: String
  journalLevel: String
  createdAt: Time!
  updatedAt: Time!
}

type PaperPreview {
  teachersIn: [UserExport]
  teachersOut: [String]
  title: String
  publishDate: Time
  rank: String
  journalName: String
  journalLevel: String
}

input PaperData {
  teachersIn: [ID]!
  teachersOut: [String]
  title: String!
  publishDate: Time
  rank: String
  journalName: String
  journalLevel: String
}

input PaperFilter {
  teachersIn: [ID]!
  teachersOut: [String]
  title: String
  publishDateStart: Time
  publishDateEnd: Time
  rank: String
  journalName: String
  journalLevel: String
  createdStart: Time
  createdEnd: Time
  updatedStart: Time
  updatedEnd: Time
}

extend type Query {
  paper(id: ID!): Paper!

  papersByFilter(filter: PaperFilter): [Paper]!
}

extend type Mutation {
  createPaper(newPaperData: PaperData!): Paper!
  updatePaper(id: ID!, paperData: PaperData!): Paper!
  deletePaper(id: ID!): Paper!

  uploadPapers(file: Upload!): [PaperPreview]!
  createPapers(newPapersDatas: [PaperData]!): [Paper]!
}
