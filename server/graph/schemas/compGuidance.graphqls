# 竞赛指导 Competition
type CompGuidance {
  id: ID!
  projectName: String!
  studentNames: [String]!
  competitionScore: String
  guidanceDate: Time!
  awardStatus: String
  createdAt: Time!
  updatedAt: Time!
}

type CompGuidanceQuery {
  totalCount: Int!
  compGuidances: [CompGuidance]!
}

type CompGuidancePreview {
  projectName: String
  studentNames: [String]
  competitionScore: String
  guidanceDate: Time
  awardStatus: String
}

input CompGuidanceData {
  projectName: String!
  studentNames: [String]!
  competitionScore: String
  guidanceDate: Time!
  awardStatus: String
}

input CompGuidanceFilter {
  projectName: String
  studentNames: [String]
  guidanceDateStart: Time
  guidanceDateEnd: Time
  awardStatus: String
  createdStart: Time
  createdEnd: Time
  updatedStart: Time
  updatedEnd: Time
}

extend type Query {
  compGuidance(id: ID!): CompGuidance!

  compGuidancesByFilter(
    filter: CompGuidanceFilter!
    offset: Int!
    limit: Int!
  ): CompGuidanceQuery!
}

extend type Mutation {
  createCompGuidance(compGuidanceData: CompGuidanceData!): CompGuidance!
  updateCompGuidance(
    id: ID!
    compGuidanceData: CompGuidanceData!
  ): CompGuidance!
  deleteCompGuidance(id: ID!): CompGuidance!

  uploadCompGuidances(file: Upload!): [CompGuidancePreview]!
}
