package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
	"fmt"
	models "server/graph/model"

	"github.com/99designs/gqlgen/graphql"
)

// CreateCourse is the resolver for the createCourse field.
func (r *mutationResolver) CreateCourse(ctx context.Context, termID string, input models.NewCourse) (*models.Course, error) {
	panic(fmt.Errorf("not implemented: CreateCourse - createCourse"))
}

// UpdateCourse is the resolver for the updateCourse field.
func (r *mutationResolver) UpdateCourse(ctx context.Context, courseID string, input models.UpdateCourse) (*models.Course, error) {
	panic(fmt.Errorf("not implemented: UpdateCourse - updateCourse"))
}

// DeleteCourse is the resolver for the deleteCourse field.
func (r *mutationResolver) DeleteCourse(ctx context.Context, termID string, courseID string) (*models.Course, error) {
	panic(fmt.Errorf("not implemented: DeleteCourse - deleteCourse"))
}

// CreateTerm is the resolver for the createTerm field.
func (r *mutationResolver) CreateTerm(ctx context.Context, input models.NewTerm) (*models.Term, error) {
	panic(fmt.Errorf("not implemented: CreateTerm - createTerm"))
}

// UpdateTerm is the resolver for the updateTerm field.
func (r *mutationResolver) UpdateTerm(ctx context.Context, termID string, input *models.UpdateTerm) (*models.Term, error) {
	panic(fmt.Errorf("not implemented: UpdateTerm - updateTerm"))
}

// DeleteTerm is the resolver for the deleteTerm field.
func (r *mutationResolver) DeleteTerm(ctx context.Context, termID string) (*models.Term, error) {
	panic(fmt.Errorf("not implemented: DeleteTerm - deleteTerm"))
}

// UploadTerm is the resolver for the uploadTerm field.
func (r *mutationResolver) UploadTerm(ctx context.Context, file graphql.Upload) (*models.TermPreview, error) {
	panic(fmt.Errorf("not implemented: UploadTerm - uploadTerm"))
}

// Term is the resolver for the term field.
func (r *queryResolver) Term(ctx context.Context, id string) (*models.Term, error) {
	panic(fmt.Errorf("not implemented: Term - term"))
}

// Terms is the resolver for the terms field.
func (r *queryResolver) Terms(ctx context.Context) ([]*models.Term, error) {
	panic(fmt.Errorf("not implemented: Terms - terms"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
