package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
	"fmt"
	models "server/graph/model"
)

// CreateScientificResearch is the resolver for the createScientificResearch field.
func (r *mutationResolver) CreateScientificResearch(ctx context.Context, input models.NewScientificResearch) (*models.ScientificResearch, error) {
	panic(fmt.Errorf("not implemented: CreateScientificResearch - createScientificResearch"))
}

// AwardScientificResearch is the resolver for the awardScientificResearch field.
func (r *queryResolver) AwardScientificResearch(ctx context.Context, id string) (*models.AwardScientificResearch, error) {
	panic(fmt.Errorf("not implemented: AwardScientificResearch - awardScientificResearch"))
}

// AwardScientificResearchs is the resolver for the awardScientificResearchs field.
func (r *queryResolver) AwardScientificResearchs(ctx context.Context, teacherID string) ([]*models.AwardScientificResearch, error) {
	panic(fmt.Errorf("not implemented: AwardScientificResearchs - awardScientificResearchs"))
}

// ScientificResearch is the resolver for the scientificResearch field.
func (r *queryResolver) ScientificResearch(ctx context.Context, id string) (*models.ScientificResearch, error) {
	panic(fmt.Errorf("not implemented: ScientificResearch - scientificResearch"))
}

// ScientificResearchs is the resolver for the scientificResearchs field.
func (r *queryResolver) ScientificResearchs(ctx context.Context, teacherID string) ([]*models.AwardScientificResearch, error) {
	panic(fmt.Errorf("not implemented: ScientificResearchs - scientificResearchs"))
}
