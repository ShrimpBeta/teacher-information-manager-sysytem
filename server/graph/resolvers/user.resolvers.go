package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
	"fmt"
	graphql_models "server/graph/model"

	"github.com/99designs/gqlgen/graphql"
)

// DeleteAccount is the resolver for the deleteAccount field.
func (r *mutationResolver) DeleteAccount(ctx context.Context, userID string) (*graphql_models.User, error) {
	panic(fmt.Errorf("not implemented: DeleteAccount - deleteAccount"))
}

// UpdateAccountPassword is the resolver for the updateAccountPassword field.
func (r *mutationResolver) UpdateAccountPassword(ctx context.Context, userID string, passwordData *graphql_models.ChangePassword) (string, error) {
	panic(fmt.Errorf("not implemented: UpdateAccountPassword - updateAccountPassword"))
}

// ForgetAccountPassword is the resolver for the forgetAccountPassword field.
func (r *mutationResolver) ForgetAccountPassword(ctx context.Context, userID string, passwordCodeData *graphql_models.ResetPassword) (string, error) {
	panic(fmt.Errorf("not implemented: ForgetAccountPassword - forgetAccountPassword"))
}

// UpdateUser is the resolver for the updateUser field.
func (r *mutationResolver) UpdateUser(ctx context.Context, userID string, userData graphql_models.UpdateUser) (*graphql_models.User, error) {
	panic(fmt.Errorf("not implemented: UpdateUser - updateUser"))
}

// CreateWechatToken is the resolver for the createWechatToken field.
func (r *mutationResolver) CreateWechatToken(ctx context.Context, userID string, token string) (bool, error) {
	panic(fmt.Errorf("not implemented: CreateWechatToken - createWechatToken"))
}

// UpdateWechatToken is the resolver for the updateWechatToken field.
func (r *mutationResolver) UpdateWechatToken(ctx context.Context, userID string, token string) (bool, error) {
	panic(fmt.Errorf("not implemented: UpdateWechatToken - updateWechatToken"))
}

// DeleteWechatToken is the resolver for the deleteWechatToken field.
func (r *mutationResolver) DeleteWechatToken(ctx context.Context, userID string) (bool, error) {
	panic(fmt.Errorf("not implemented: DeleteWechatToken - deleteWechatToken"))
}

// UploadAvatar is the resolver for the uploadAvatar field.
func (r *mutationResolver) UploadAvatar(ctx context.Context, userID string, avatar graphql.Upload) (*graphql_models.AvatarPath, error) {
	panic(fmt.Errorf("not implemented: UploadAvatar - uploadAvatar"))
}

// User is the resolver for the user field.
func (r *queryResolver) User(ctx context.Context, id string) (*graphql_models.User, error) {
	panic(fmt.Errorf("not implemented: User - user"))
}

// UserExports is the resolver for the userExports field.
func (r *queryResolver) UserExports(ctx context.Context) ([]*graphql_models.UserExport, error) {
	panic(fmt.Errorf("not implemented: UserExports - userExports"))
}

// SignIn is the resolver for the signIn field.
func (r *queryResolver) SignIn(ctx context.Context, email string, password string) (*graphql_models.AuthPayload, error) {
	panic(fmt.Errorf("not implemented: SignIn - signIn"))
}
