package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
	"fmt"
	graphql_models "server/graph/model"
)

// CreatePassword is the resolver for the createPassword field.
func (r *mutationResolver) CreatePassword(ctx context.Context, userid string, newPasswordData graphql_models.NewPassword) (*graphql_models.Password, error) {
	panic(fmt.Errorf("not implemented: CreatePassword - createPassword"))
}

// UpdatePassword is the resolver for the updatePassword field.
func (r *mutationResolver) UpdatePassword(ctx context.Context, id string, passwordData graphql_models.UpdatePassword) (*graphql_models.Password, error) {
	panic(fmt.Errorf("not implemented: UpdatePassword - updatePassword"))
}

// DeletePassword is the resolver for the deletePassword field.
func (r *mutationResolver) DeletePassword(ctx context.Context, id string) (*graphql_models.Password, error) {
	panic(fmt.Errorf("not implemented: DeletePassword - deletePassword"))
}

// Password is the resolver for the password field.
func (r *queryResolver) Password(ctx context.Context, id string, userid string) (*graphql_models.Password, error) {
	panic(fmt.Errorf("not implemented: Password - password"))
}

// Passwords is the resolver for the passwords field.
func (r *queryResolver) Passwords(ctx context.Context, userID string) ([]*graphql_models.Password, error) {
	panic(fmt.Errorf("not implemented: Passwords - passwords"))
}
