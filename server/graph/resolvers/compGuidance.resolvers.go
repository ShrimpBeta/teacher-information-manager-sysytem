package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
	"fmt"
	graphql_models "server/graph/model"

	"github.com/99designs/gqlgen/graphql"
)

// CreateCompGuidance is the resolver for the createCompGuidance field.
func (r *mutationResolver) CreateCompGuidance(ctx context.Context, userID string, newGuidanceData graphql_models.CompGuidanceData) (*graphql_models.CompGuidance, error) {
	return r.CompGuidanceService.CreateCompGuidance(userID, newGuidanceData)
}

// UpdateCompGuidance is the resolver for the updateCompGuidance field.
func (r *mutationResolver) UpdateCompGuidance(ctx context.Context, id string, compGuidanceData graphql_models.CompGuidanceData) (*graphql_models.CompGuidance, error) {
	return r.CompGuidanceService.UpdateCompGuidance(id, compGuidanceData)
}

// DeleteCompGuidance is the resolver for the deleteCompGuidance field.
func (r *mutationResolver) DeleteCompGuidance(ctx context.Context, id string) (*graphql_models.CompGuidance, error) {
	return r.CompGuidanceService.DeleteCompGuidance(id)
}

// UploadCompGuidances is the resolver for the uploadCompGuidances field.
func (r *mutationResolver) UploadCompGuidances(ctx context.Context, file graphql.Upload) ([]*graphql_models.CompGuidancePreview, error) {
	panic(fmt.Errorf("not implemented: UploadCompGuidances - uploadCompGuidances"))
}

// CreateCompGuidances is the resolver for the createCompGuidances field.
func (r *mutationResolver) CreateCompGuidances(ctx context.Context, userID string, newGuidancesData []*graphql_models.CompGuidanceData) ([]*graphql_models.CompGuidance, error) {
	panic(fmt.Errorf("not implemented: CreateCompGuidances - createCompGuidances"))
}

// CompGuidance is the resolver for the compGuidance field.
func (r *queryResolver) CompGuidance(ctx context.Context, id string) (*graphql_models.CompGuidance, error) {
	return r.CompGuidanceService.GetCompGuidanceById(id)
}

// CompGuidancesByFilter is the resolver for the compGuidancesByFilter field.
func (r *queryResolver) CompGuidancesByFilter(ctx context.Context, filter graphql_models.CompGuidanceFilter) ([]*graphql_models.CompGuidance, error) {
	panic(fmt.Errorf("not implemented: CompGuidancesByFilter - compGuidancesByFilter"))
}
