package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
	"fmt"
	graphql_models "server/graph/model"
)

// CreateUPGuidance is the resolver for the createUPGuidance field.
func (r *mutationResolver) CreateUPGuidance(ctx context.Context, newUGPGGuidanceData graphql_models.NewUGPGGuidance) (*graphql_models.UGPGGuidance, error) {
	panic(fmt.Errorf("not implemented: CreateUPGuidance - createUPGuidance"))
}

// UpdateUPGuidance is the resolver for the updateUPGuidance field.
func (r *mutationResolver) UpdateUPGuidance(ctx context.Context, uGPGGuidanceID string, uGPGGuidanceData graphql_models.UpdateUGPGGuidance) (*graphql_models.UGPGGuidance, error) {
	panic(fmt.Errorf("not implemented: UpdateUPGuidance - updateUPGuidance"))
}

// DeleteUPGuidance is the resolver for the deleteUPGuidance field.
func (r *mutationResolver) DeleteUPGuidance(ctx context.Context, uGPGGuidanceID string) (*graphql_models.UGPGGuidance, error) {
	panic(fmt.Errorf("not implemented: DeleteUPGuidance - deleteUPGuidance"))
}

// UGPGGuidance is the resolver for the uGPGGuidance field.
func (r *queryResolver) UGPGGuidance(ctx context.Context, id string) (*graphql_models.UGPGGuidance, error) {
	panic(fmt.Errorf("not implemented: UGPGGuidance - uGPGGuidance"))
}

// UGPGGuidances is the resolver for the uGPGGuidances field.
func (r *queryResolver) UGPGGuidances(ctx context.Context, teacherID string) ([]*graphql_models.UGPGGuidance, error) {
	panic(fmt.Errorf("not implemented: UGPGGuidances - uGPGGuidances"))
}

// UGPGGuidancesByTopicName is the resolver for the uGPGGuidancesByTopicName field.
func (r *queryResolver) UGPGGuidancesByTopicName(ctx context.Context, name string) ([]*graphql_models.UGPGGuidance, error) {
	panic(fmt.Errorf("not implemented: UGPGGuidancesByTopicName - uGPGGuidancesByTopicName"))
}
