package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
	"fmt"
	graphql_models "server/graph/model"

	"github.com/99designs/gqlgen/graphql"
)

// CreateUPGuidance is the resolver for the createUPGuidance field.
func (r *mutationResolver) CreateUGPGGuidance(ctx context.Context, userID string, uGPGGuidanceData graphql_models.UGPGGuidanceData) (*graphql_models.UGPGGuidance, error) {
	panic(fmt.Errorf("not implemented: CreateUPGuidance - createUPGuidance"))
}

// UpdateUPGuidance is the resolver for the updateUPGuidance field.
func (r *mutationResolver) UpdateUGPGGuidance(ctx context.Context, id string, uGPGGuidanceData graphql_models.UGPGGuidanceData) (*graphql_models.UGPGGuidance, error) {
	panic(fmt.Errorf("not implemented: UpdateUPGuidance - updateUPGuidance"))
}

// DeleteUPGuidance is the resolver for the deleteUPGuidance field.
func (r *mutationResolver) DeleteUGPGGuidance(ctx context.Context, id string) (*graphql_models.UGPGGuidance, error) {
	panic(fmt.Errorf("not implemented: DeleteUPGuidance - deleteUPGuidance"))
}

// UploadUGPGGuidances is the resolver for the uploadUGPGGuidances field.
func (r *mutationResolver) UploadUGPGGuidances(ctx context.Context, file graphql.Upload) ([]*graphql_models.UGPGGuidancePreview, error) {
	panic(fmt.Errorf("not implemented: UploadUGPGGuidances - uploadUGPGGuidances"))
}

// CreateUPGuidances is the resolver for the createUPGuidances field.
func (r *mutationResolver) CreateUGPGGuidances(ctx context.Context, userID string, uGPGGuidancesData []*graphql_models.UGPGGuidanceData) ([]*graphql_models.UGPGGuidance, error) {
	panic(fmt.Errorf("not implemented: CreateUPGuidances - createUPGuidances"))
}

// UGPGGuidance is the resolver for the uGPGGuidance field.
func (r *queryResolver) UGPGGuidance(ctx context.Context, id string) (*graphql_models.UGPGGuidance, error) {
	panic(fmt.Errorf("not implemented: UGPGGuidance - uGPGGuidance"))
}

// UGPGGuidancesByFilter is the resolver for the uGPGGuidancesByFilter field.
func (r *queryResolver) UGPGGuidancesByFilter(ctx context.Context, filter graphql_models.UGPGGuidanceFilter) ([]*graphql_models.UGPGGuidance, error) {
	panic(fmt.Errorf("not implemented: UGPGGuidancesByFilter - uGPGGuidancesByFilter"))
}
