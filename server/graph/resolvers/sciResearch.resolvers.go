package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
	"fmt"
	graphql_models "server/graph/model"
)

// CreateSciResearch is the resolver for the createSciResearch field.
func (r *mutationResolver) CreateSciResearch(ctx context.Context, input graphql_models.NewSciResearch) (*graphql_models.SciResearch, error) {
	panic(fmt.Errorf("not implemented: CreateSciResearch - createSciResearch"))
}

// AwardSciResearch is the resolver for the awardSciResearch field.
func (r *queryResolver) AwardSciResearch(ctx context.Context, id string) (*graphql_models.AwardSciResearch, error) {
	panic(fmt.Errorf("not implemented: AwardSciResearch - awardSciResearch"))
}

// AwardSciResearchs is the resolver for the awardSciResearchs field.
func (r *queryResolver) AwardSciResearchs(ctx context.Context, teacherID string) ([]*graphql_models.AwardSciResearch, error) {
	panic(fmt.Errorf("not implemented: AwardSciResearchs - awardSciResearchs"))
}

// SciResearch is the resolver for the sciResearch field.
func (r *queryResolver) SciResearch(ctx context.Context, id string) (*graphql_models.SciResearch, error) {
	panic(fmt.Errorf("not implemented: SciResearch - sciResearch"))
}

// SciResearchs is the resolver for the sciResearchs field.
func (r *queryResolver) SciResearchs(ctx context.Context, teacherID string) ([]*graphql_models.AwardSciResearch, error) {
	panic(fmt.Errorf("not implemented: SciResearchs - sciResearchs"))
}
