package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
	"fmt"
	graphql_models "server/graph/model"

	"github.com/99designs/gqlgen/graphql"
)

// CreateCourse is the resolver for the createCourse field.
func (r *mutationResolver) CreateCourse(ctx context.Context, termID string, courseData graphql_models.CourseData) (*graphql_models.Course, error) {
	panic(fmt.Errorf("not implemented: CreateCourse - createCourse"))
}

// UpdateCourse is the resolver for the updateCourse field.
func (r *mutationResolver) UpdateCourse(ctx context.Context, termID string, courseID string, courseData graphql_models.CourseData) (*graphql_models.Course, error) {
	panic(fmt.Errorf("not implemented: UpdateCourse - updateCourse"))
}

// DeleteCourse is the resolver for the deleteCourse field.
func (r *mutationResolver) DeleteCourse(ctx context.Context, termID string, courseID string) (*graphql_models.Course, error) {
	panic(fmt.Errorf("not implemented: DeleteCourse - deleteCourse"))
}

// CreateacademicTerm is the resolver for the createacademicTerm field.
func (r *mutationResolver) CreateAcademicTerm(ctx context.Context, userID string, termData graphql_models.NewAcademicTerm) (*graphql_models.AcademicTerm, error) {
	panic(fmt.Errorf("not implemented: CreateacademicTerm - createacademicTerm"))
}

// UpdateacademicTerm is the resolver for the updateacademicTerm field.
func (r *mutationResolver) UpdateAcademicTerm(ctx context.Context, termID string, termData graphql_models.UpdateAcademicTerm) (*graphql_models.AcademicTerm, error) {
	panic(fmt.Errorf("not implemented: UpdateacademicTerm - updateacademicTerm"))
}

// DeleteacademicTerm is the resolver for the deleteacademicTerm field.
func (r *mutationResolver) DeleteAcademicTerm(ctx context.Context, termID string) (*graphql_models.AcademicTerm, error) {
	panic(fmt.Errorf("not implemented: DeleteacademicTerm - deleteacademicTerm"))
}

// UploadAcademicTerm is the resolver for the uploadAcademicTerm field.
func (r *mutationResolver) UploadAcademicTerm(ctx context.Context, file graphql.Upload) (*graphql_models.AcademicTermPreview, error) {
	panic(fmt.Errorf("not implemented: UploadAcademicTerm - uploadAcademicTerm"))
}

// AcademicTerm is the resolver for the academicTerm field.
func (r *queryResolver) AcademicTerm(ctx context.Context, id string) (*graphql_models.AcademicTerm, error) {
	panic(fmt.Errorf("not implemented: AcademicTerm - academicTerm"))
}

// Academicerms is the resolver for the academicerms field.
func (r *queryResolver) AcademicTerms(ctx context.Context, userID string) ([]*graphql_models.AcademicTermShort, error) {
	panic(fmt.Errorf("not implemented: Academicerms - academicerms"))
}
